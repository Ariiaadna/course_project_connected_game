# MessageWindow.gd
extends Panel

#@onready var _scroll: ScrollContainer =$ScrollContainer
#@onready var _vbox: VBoxContainer = $ScrollContainer/MessagesVBox
# –æ–±—ä—è–≤–ª—è–µ–º –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –∫–æ–¥–∞
var _scroll: ScrollContainer
var _vbox: VBoxContainer
var _message_log: Node = null

# –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä—è—á–µ–º –æ–∫–Ω–æ
func _ready():
	await get_tree().process_frame  # üî• –∂–¥—ë–º –æ–¥–∏–Ω –∫–∞–¥—Ä, —á—Ç–æ–±—ã –≤—Å–µ –Ω–æ–¥—ã —Å—Ç–∞–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
	_scroll = $ScrollContainer
	_vbox = $ScrollContainer/MessagesVBox
	visible = false
	# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª—è–ª–∏—Å—å –≤ –æ–∫–Ω–æ
	MessageLog.message_added.connect(_on_message_added)
	# –ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ –∏–º–µ—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
	_refresh_messages()

func _process(_delta):
	if Input.is_action_just_pressed("toggle_messages") \
	and WordlManager.history_can_open:
		visible = not visible
		if visible:
			# –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
			_refresh_messages()
			await get_tree().process_frame
			_scroll_to_bottom()

# –î–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
func _on_message_added(msg: Dictionary):
	if not visible:
		var lbl := _create_message_label(msg)
		_vbox.add_child(lbl)
		await get_tree().process_frame
	if visible:
		_scroll_to_bottom()
	#var label = _create_message_label(msg)
	#_vbox.add_child(label)
	#await get_tree().process_frame
	#_scroll_to_bottom()

# –û–±–Ω–æ–≤–∏—Ç—å –≤—Å—ë –æ–∫–Ω–æ
func _refresh_messages() -> void:
	if _vbox == null or _message_log == null:
		return
		
	# —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é
	for child in _vbox.get_children():
		child.queue_free()

	# –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ª–æ–≥–∞
	for msg in _message_log.get_messages():
		_vbox.add_child(_create_message_label(msg))
		
# –°–æ–∑–¥–∞—ë—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É (Label)
func _create_message_label(msg: Dictionary) -> Label:
	var who: int = int(msg.get("who", 0))
	var who_text: String = "Player" if who == 1 else "AI"
	var lbl: Label = Label.new()
	lbl.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	lbl.custom_minimum_size.x = 950 # <-- –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
	lbl.text = "%s: %s" % [who_text, String(msg.get("text", ""))]
	lbl.autowrap_mode = TextServer.AUTOWRAP_WORD_SMART
	lbl.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	lbl.clip_text = false
	return lbl


func _scroll_to_bottom() -> void:
	if _scroll == null:
		return
	await get_tree().process_frame  # –∂–¥—ë–º, –ø–æ–∫–∞ layout –æ–±–Ω–æ–≤–∏—Ç—Å—è
	_scroll.scroll_vertical = 9999999
